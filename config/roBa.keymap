#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt NUMBER_1 Q    &mt NUMBER_2 W      &mt NUMBER_3 E       &mt NUMBER_4 R          &mt N5 T                                                                        &mt NUMBER_6 Y      &mt N7 U             &mt N8 I         &mt N9 O        &mt N0 P
&mt SLASH A       &mt LEFT_BRACKET S  &mt RIGHT_BRACKET D  &mt LEFT_BRACE F        &mt RIGHT_BRACE G   &mt LS(LG(RIGHT_SHIFT)) LS(LG(S))      &mt EQUAL BACKSLASH  &mt AT_SIGN H       &mt PLUS J           &mt ASTERISK K   &mt QUESTION L  &mt UNDER MINUS
&mt LEFT_SHIFT Z  &mt LC(C) X         &mt LC(V) C          &mt LESS_THAN V         &mt GREATER_THAN B  &kp TAB                                &mt TILDE COLON      &mt SINGLE_QUOTE N  &mt DOUBLE_QUOTES M  &mt CARET COMMA  &mt DOLLAR DOT  &lt 3 SLASH
&kp LCTRL         &kp LEFT_WIN        &kp LEFT_ALT         &lt_to_layer_0 1 LANG2  &lt 2 SPACE         &lt 3 LANG1                            &kp BACKSPACE        &lt 6 ENTER                                                               &lt 5 DELETE
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        NUM {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2          &kp NUMBER_3           &kp NUMBER_4    &kp NUMBER_5                                 &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp SLASH       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp K_MUTE      &kp EQUAL  &kp PAGE_UP    &trans        &kp UP_ARROW  &trans        &kp BACKSLASH
&kp LEFT_SHIFT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN   &kp GREATER_THAN  &trans          &kp COLON  &kp PAGE_DOWN  &kp LEFT      &kp DOWN      &kp RIGHT     &kp PIPE
&trans          &trans                &trans                 &trans          &trans            &trans          &trans     &trans                                                   &kp F12
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH   &kp DOLLAR  &kp PERCENT                           &kp AMPERSAND  &kp APOS  &kp TILDE     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH        &kp SEMI           &kp COLON  &kp GRAVE   &kp ASTERISK  &trans       &kp CARET  &kp AT_SIGN    &kp PLUS  &kp ASTERISK  &kp QUESTION          &kp PERCENT
&kp F1           &kp F2             &kp F3     &kp F4      &kp F5        &kp F11      &kp F12    &kp F6         &kp F7    &kp F8        &kp F9                &kp F10
&trans           &trans             &trans     &trans      &trans        &trans       &trans     &trans                                                       &kp PIPE
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_DEC C_BRIGHTNESS_INC>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &kt TAB                      &trans  &trans          &trans          &trans           &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &mkp MB1        &kp UP_ARROW    &mkp MB2         &mkp MB3
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &kp C_RESET
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
